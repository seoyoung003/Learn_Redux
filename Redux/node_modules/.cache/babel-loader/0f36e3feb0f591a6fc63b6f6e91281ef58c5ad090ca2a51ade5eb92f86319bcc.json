{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    incrementHandler(state) {\n      //if문이 필요없는 이유는 어떤 액션 했느냐에 따라 메서드가 자동으로 호출되기 때문이다.\n      state.counter++; //redux-toolkit과 createSlice를 사용하면 기존상태를 바꿀 수 없게한다 따라서서 다음과 같은 코드를 써도 된다.\n    },\n    decrementHandler(state) {\n      state.counter--;\n    },\n    increaseHandler(state, action) {\n      //increase는 다른 메서드와 다르게 추가 데이터가 필요하므로 action을 선택적으로 매개변수에 넣는다.\n      state.counter = state.counter + action.payload; //payload라는 정해진 이름의 속성에 접근해야한다.\n    },\n    toggleCounterHandler(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nexport default counterSlice.reducer;\nexport const counterActions = counter.actions; //액션 객체 생성해준다. 이 코드를 통해 counterSlice에서 일치하는 함수 실행","map":{"version":3,"names":["createSlice","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","incrementHandler","state","decrementHandler","increaseHandler","action","payload","toggleCounterHandler","reducer","counterActions","actions"],"sources":["C:/Users/USER/Desktop/React Udemy/Redux/src/store/counter.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCounterState = {counter: 0, showCounter: true}\r\n\r\nconst counterSlice = createSlice({\r\n    name:'counter',\r\n    initialState: initialCounterState,\r\n    reducers: {\r\n        incrementHandler(state) {//if문이 필요없는 이유는 어떤 액션 했느냐에 따라 메서드가 자동으로 호출되기 때문이다.\r\n            state.counter++; //redux-toolkit과 createSlice를 사용하면 기존상태를 바꿀 수 없게한다 따라서서 다음과 같은 코드를 써도 된다.\r\n        }, \r\n        decrementHandler(state) {\r\n            state.counter--;\r\n        },\r\n        increaseHandler(state, action) {//increase는 다른 메서드와 다르게 추가 데이터가 필요하므로 action을 선택적으로 매개변수에 넣는다.\r\n            state.counter = state.counter + action.payload;//payload라는 정해진 이름의 속성에 접근해야한다.\r\n        },\r\n        toggleCounterHandler(state) {\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n    }\r\n});\r\n\r\nexport default counterSlice.reducer;\r\n\r\nexport const counterActions = counter.actions;//액션 객체 생성해준다. 이 코드를 통해 counterSlice에서 일치하는 함수 실행"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,mBAAmB,GAAG;EAACC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAI,CAAC;AAE3D,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAC,SAAS;EACdC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACNC,gBAAgBA,CAACC,KAAK,EAAE;MAAC;MACrBA,KAAK,CAACP,OAAO,EAAE,CAAC,CAAC;IACrB,CAAC;IACDQ,gBAAgBA,CAACD,KAAK,EAAE;MACpBA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,eAAeA,CAACF,KAAK,EAAEG,MAAM,EAAE;MAAC;MAC5BH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC,OAAO,CAAC;IACnD,CAAC;IACDC,oBAAoBA,CAACL,KAAK,EAAE;MACxBA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeC,YAAY,CAACW,OAAO;AAEnC,OAAO,MAAMC,cAAc,GAAGd,OAAO,CAACe,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}