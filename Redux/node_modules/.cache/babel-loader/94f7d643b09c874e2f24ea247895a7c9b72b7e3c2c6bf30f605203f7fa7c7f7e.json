{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit'; //configureStore은 여러개의 리듀서를 하나의 리듀서로 합칠 수 있다. 객체를 인수로 준다다\n\nimport counterReducer from './counter';\nimport authSlice from './auth';\nconst store = configureStore({\n  reducer: {\n    auth: authSlice.reducer,\n    counter: counterSlice.reducer\n  } //slice가 여러개일 때는 키와 값으로 구성된 객체 값을 주면 된다.\n});\nexport const counterActions = counterSlice.actions; //액션 객체 생성해준다. 이 코드를 통해 counterSlice에서 일치하는 함수 실행\nexport const authActions = authSlice.actions;\nexport default store;\n\n// const counterReduxer = (state = initialState, action) => {  툴킷이 아닌 일반 리덕스 사용시\n//     if(action.type === 'increment') {\n//         return{\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if(action.type === 'increase') {\n//         return{\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if(action.type === 'decrement') {\n//         return {\n//             counter: state.counter -1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if(action.type === 'toggle') {\n//         return{\n//             showCounter: !state.showCounter,\n//             counter: state.counter\n//         }\n//     }\n\n//     return state;\n// }","map":{"version":3,"names":["configureStore","counterReducer","authSlice","store","reducer","auth","counter","counterSlice","counterActions","actions","authActions"],"sources":["C:/Users/USER/Desktop/React Udemy/Redux/src/store/index.js"],"sourcesContent":["import {configureStore}  from '@reduxjs/toolkit'//configureStore은 여러개의 리듀서를 하나의 리듀서로 합칠 수 있다. 객체를 인수로 준다다\r\n\r\nimport counterReducer from './counter';\r\nimport authSlice from './auth';\r\n\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {auth: authSlice.reducer,  counter: counterSlice.reducer} //slice가 여러개일 때는 키와 값으로 구성된 객체 값을 주면 된다.\r\n});\r\nexport const counterActions = counterSlice.actions;//액션 객체 생성해준다. 이 코드를 통해 counterSlice에서 일치하는 함수 실행\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default store;\r\n\r\n\r\n// const counterReduxer = (state = initialState, action) => {  툴킷이 아닌 일반 리덕스 사용시\r\n//     if(action.type === 'increment') {\r\n//         return{\r\n//             counter: state.counter + 1,\r\n//             showCounter: state.showCounter\r\n//         }\r\n//     }\r\n\r\n//     if(action.type === 'increase') {\r\n//         return{\r\n//             counter: state.counter + action.amount,\r\n//             showCounter: state.showCounter\r\n//         }\r\n//     }\r\n\r\n//     if(action.type === 'decrement') {\r\n//         return {\r\n//             counter: state.counter -1,\r\n//             showCounter: state.showCounter\r\n//         }\r\n//     }\r\n\r\n//     if(action.type === 'toggle') {\r\n//         return{\r\n//             showCounter: !state.showCounter,\r\n//             counter: state.counter\r\n//         }\r\n//     }\r\n\r\n//     return state;\r\n// }\r\n"],"mappings":"AAAA,SAAQA,cAAc,QAAQ,kBAAkB;;AAEhD,OAAOC,cAAc,MAAM,WAAW;AACtC,OAAOC,SAAS,MAAM,QAAQ;AAI9B,MAAMC,KAAK,GAAGH,cAAc,CAAC;EACzBI,OAAO,EAAE;IAACC,IAAI,EAAEH,SAAS,CAACE,OAAO;IAAGE,OAAO,EAAEC,YAAY,CAACH;EAAO,CAAC,CAAC;AACvE,CAAC,CAAC;AACF,OAAO,MAAMI,cAAc,GAAGD,YAAY,CAACE,OAAO,CAAC;AACnD,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAAO;AAE5C,eAAeN,KAAK;;AAGpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}