{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\React Udemy\\\\Redux\\\\src\\\\components\\\\Counter.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\n\n// import { Component } from 'react';\n\nimport classes from './Counter.module.css';\nimport { counterActions } from '../store/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter); //useSelector 사용시 react-redux는 이 컴포넌트를 리덕스 저장소에 자동으로 구독 설정함함\n  const show = useSelector(state => state.showCounter);\n  const incrementHandler = () => {\n    // dispatch({type: 'increment'});\n    dispatch(counterActions.increment());\n  };\n  const increaseHandler = () => {\n    // dispatch({type: 'increase', amount: 5})\n    dispatch(counterActions.increase(10)); //amount대신 increase에 원하는 payload값을 넣어주면 됨 payload는 정해진 필드명임. {type: IDENTIFIER, payload: 10}\n  };\n  const decrementHandler = () => {\n    // dispatch({type: 'decrement'});\n    dispatch(counterActions.decrement());\n  };\n  const toggleCounterHandler = () => {\n    // dispatch({type: 'toggle'})\n    dispatch(counterActions.toggleCounter());\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"Increaseby5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n_s(Counter, \"a6W6bcAuHVADZPU2xn93xNQZltc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Counter;\nexport default Counter;\n\n// class Counter extends Component {\n\n//   incrementHandler() {\n//     this.props.increment();\n//   }\n//   decrementHandler() {\n//     this.props.decrement();\n//   }\n//   toggleCounterHandler() {\n\n//   }\n\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>decrement</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler.bind(this)}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n\n// const mapStateToProps = state => {\n//   return {\n//     counter: state.counter\n//   }\n// }\n\n// const mapDispatchToProps = dispatch => {\n//   return{\n//     increment: () => dispatch({type: 'increment'}),\n//     decrement: () => dispatch({type: 'decrement'})\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps) (Counter);\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useSelector","useDispatch","classes","counterActions","jsxDEV","_jsxDEV","Counter","_s","dispatch","counter","state","show","showCounter","incrementHandler","increment","increaseHandler","increase","decrementHandler","decrement","toggleCounterHandler","toggleCounter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/React Udemy/Redux/src/components/Counter.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\n\n// import { Component } from 'react';\n\nimport classes from './Counter.module.css';\nimport { counterActions } from '../store/index'\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter);//useSelector 사용시 react-redux는 이 컴포넌트를 리덕스 저장소에 자동으로 구독 설정함함\n  const show = useSelector(state => state.showCounter);\n\n  const incrementHandler = () => {\n    // dispatch({type: 'increment'});\n    dispatch(counterActions.increment());\n  }\n\n  const increaseHandler= () => {\n    // dispatch({type: 'increase', amount: 5})\n    dispatch(counterActions.increase(10)); //amount대신 increase에 원하는 payload값을 넣어주면 됨 payload는 정해진 필드명임. {type: IDENTIFIER, payload: 10}\n  }\n\n  const decrementHandler = () => {\n    // dispatch({type: 'decrement'});\n    dispatch(counterActions.decrement());\n  }\n\n  const toggleCounterHandler = () => {\n    // dispatch({type: 'toggle'})\n    dispatch(counterActions.toggleCounter());\n  };\n\nreturn (\n  <main className={classes.counter}>\n    <h1>Redux Counter</h1>\n    {show && <div className={classes.value}>{counter}</div>} \n    {/* show 가 참일때만 div 렌더링함 */}\n    <div>\n      <button onClick={incrementHandler}>Increment</button>\n      <button onClick={increaseHandler}>Increaseby5</button>\n      <button onClick={decrementHandler}>decrement</button>\n    </div>\n    <button onClick={toggleCounterHandler}>Toggle Counter</button>\n  </main>\n);\n\n};\n\nexport default Counter;\n\n// class Counter extends Component {\n\n//   incrementHandler() {\n//     this.props.increment();\n//   }\n//   decrementHandler() {\n//     this.props.decrement();\n//   }\n//   toggleCounterHandler() {\n    \n//   }\n\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>decrement</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler.bind(this)}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n\n// const mapStateToProps = state => {\n//   return {\n//     counter: state.counter\n//   }\n// }\n\n// const mapDispatchToProps = dispatch => {\n//   return{\n//     increment: () => dispatch({type: 'increment'}),\n//     decrement: () => dispatch({type: 'decrement'})\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps) (Counter);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}